,GameRulesetName,LudRules
29378,CeelkoqyuqkoqijiEagle_Observed,"(game ""Ceelkoqyuqkoqiji"" (players 2) (equipment { (mancalaBoard 2 5 largeStack:True { (track ""TrackCCW"" ""0,1,E,11,10,W"" loop:True) (track ""TrackCW"" ""0,6,E,11,5,W"" loop:True) } ) (piece ""Seed"" Shared) (piece ""Ball"" P1) (piece ""Ball"" P2) (hand Each size:2) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (map { (pair P1 LastSite) (pair P2 FirstSite) }) (regions ""EndHoles"" (sites {0 (+ 1 (* 2 5)) })) } ) (rules (start { (place Stack ""Seed"" (union (sites Bottom) (sites Top)) count:5 ) (place Stack ""Ball1"" (mapEntry P1)) (place Stack ""Ball2"" (mapEntry P2)) (set RememberValue ""OwnedP1"" (sites Bottom)) (set RememberValue ""OwnedP2"" (sites Top)) } ) phases:{ (phase ""Sowing"" (play (or { (if (!= (var ""Direction"") 2) (move Select (from (if (is Prev Mover) (sites { (var ""Replay"") }) (if (is Mover P1) (sites (values Remembered ""OwnedP1"" ) ) (sites (values Remembered ""OwnedP2"" ) ) ) ) if:(!= 0 (size Stack at:(from))) ) (then (and { (forEach Value min:1 max:(size Stack at:(last From) ) (fromTo (from (last From) level:(- (size Stack at:(last From ) ) (value) ) ) (to (trackSite Move from:(last From ) ""TrackCCW"" steps:(value) ) ) stack:True ) ) (if (or (is In (trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 1 (size Stack at:(last From ) ) ) ) (sites ""EndHoles"") ) (>= (size Stack at:(last From) ) (* 2 5) ) ) (set Var ""Direction"" 0) (if (!= 0 (size Stack at:(trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 1 (size Stack at:(last From ) ) ) ) ) ) (and { (set Var ""Direction"" 1 ) (moveAgain) (set Var ""Replay"" (trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 1 (size Stack at:(last From ) ) ) ) ) } ) (and (set Var ""Direction"" 0 ) (if (is Occupied (trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) ) (forEach Level (trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) FromTop (if (= (id ""Seed"" Shared ) (what at:(trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) level:(level ) ) ) (fromTo (from (trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) level:(level ) ) (to (handSite Mover ) ) ) (fromTo (from (trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) level:(level ) ) (to (handSite Mover 1 ) ) ) ) ) ) ) ) ) } ) ) ) ) (if (!= (var ""Direction"") 1) (move Select (from (if (is Prev Mover) (sites { (var ""Replay"") }) (if (is Mover P1) (sites (values Remembered ""OwnedP1"" ) ) (sites (values Remembered ""OwnedP2"" ) ) ) ) if:(!= 0 (size Stack at:(from))) ) (then (and (forEach Value min:1 max:(size Stack at:(last From) ) (fromTo (from (last From) level:(- (size Stack at:(last From) ) (value) ) ) (to (trackSite Move from:(last From) ""TrackCW"" steps:(value) ) ) stack:True ) ) (if (or (is In (trackSite Move from:(last From) ""TrackCW"" steps:(+ 1 (size Stack at:(last From ) ) ) ) (sites ""EndHoles"") ) (>= (size Stack at:(last From) ) (* 5 2) ) ) (set Var ""Direction"" 0) (if (!= 0 (size Stack at:(trackSite Move from:(last From ) ""TrackCW"" steps:(+ 1 (size Stack at:(last From ) ) ) ) ) ) (and { (set Var ""Direction"" 2 ) (moveAgain) (set Var ""Replay"" (trackSite Move from:(last From ) ""TrackCW"" steps:(+ 1 (size Stack at:(last From ) ) ) ) ) } ) (and (set Var ""Direction"" 0 ) (if (is Occupied (trackSite Move from:(last From ) ""TrackCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) ) (forEach Level (trackSite Move from:(last From ) ""TrackCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) FromTop (if (= (id ""Seed"" Shared ) (what at:(trackSite Move from:(last From ) ""TrackCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) level:(level ) ) ) (fromTo (from (trackSite Move from:(last From ) ""TrackCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) level:(level ) ) (to (handSite Mover ) ) ) (fromTo (from (trackSite Move from:(last From ) ""TrackCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) level:(level ) ) (to (handSite Mover 1 ) ) ) ) ) ) ) ) ) ) ) ) ) } (then (if (= 2 (count Cell in:(sites { (handSite P1 1) (handSite P2 1) } ) ) ) (and { (forEach Site (intersection (sites (values Remembered ""OwnedP1"" ) ) (sites (values Remembered ""OwnedP2"" ) ) ) (if (is Occupied (site)) (and (forEach Level (site) FromTop (if (>= (level) (/ (size Stack at:(site ) ) 2 ) ) (fromTo (from (site) level:(level ) ) (to (handSite P1 ) ) stack:True ) ) ) (forEach Level (site) FromTop (if (< (level) (/ (size Stack at:(site ) ) 2 ) ) (fromTo (from (site) level:(level ) ) (to (handSite P2 ) ) stack:True ) ) ) ) ) ) (forEach Site (union (difference (sites (values Remembered ""OwnedP1"" ) ) (sites (values Remembered ""OwnedP2"" ) ) ) (sites { (mapEntry P1) }) ) (if (is Occupied (site)) (forEach Level (site) FromTop (fromTo (from (site) level:(level) ) (to (handSite P1)) stack:True ) ) ) ) (forEach Site (union (difference (sites (values Remembered ""OwnedP2"" ) ) (sites (values Remembered ""OwnedP1"" ) ) ) (sites { (mapEntry P2) }) ) (if (is Occupied (site)) (forEach Level (site) FromTop (fromTo (from (site) level:(level) ) (to (handSite P2)) stack:True ) ) ) ) (forget Value ""OwnedP1"" All) (forget Value ""OwnedP2"" All) } ) (and (if (and (if (= 1 P1) (no Pieces All in:(sites (values Remembered ""OwnedP1"" ) ) ) (no Pieces All in:(sites (values Remembered ""OwnedP2"" ) ) ) ) (>= (size Stack Cell at:(handSite P1) ) (if (= 1 P1) (count Sites in:(sites (values Remembered ""OwnedP1"" ) ) ) (count Sites in:(sites (values Remembered ""OwnedP2"" ) ) ) ) ) ) (forEach Value min:1 max:(if (= 1 P1) (count Sites in:(sites (values Remembered ""OwnedP1"" ) ) ) (count Sites in:(sites (values Remembered ""OwnedP2"" ) ) ) ) (fromTo (from Cell (handSite P1) level:(- (size Stack Cell at:(handSite P1) ) (value) ) ) (to (regionSite (sites (values Remembered ""OwnedP1"" ) ) index:(- (value) 1) ) ) stack:True ) ) ) (if (and (if (= 1 P2) (no Pieces All in:(sites (values Remembered ""OwnedP1"" ) ) ) (no Pieces All in:(sites (values Remembered ""OwnedP2"" ) ) ) ) (>= (size Stack Cell at:(handSite P2) ) (if (= 1 P2) (count Sites in:(sites (values Remembered ""OwnedP1"" ) ) ) (count Sites in:(sites (values Remembered ""OwnedP2"" ) ) ) ) ) ) (forEach Value min:1 max:(if (= 1 P2) (count Sites in:(sites (values Remembered ""OwnedP1"" ) ) ) (count Sites in:(sites (values Remembered ""OwnedP2"" ) ) ) ) (fromTo (from Cell (handSite P2) level:(- (size Stack Cell at:(handSite P2) ) (value) ) ) (to (regionSite (sites (values Remembered ""OwnedP2"" ) ) index:(- (value) 1) ) ) stack:True ) ) ) ) ) ) ) ) (end (if (all Sites (sites Board) if:(= 0 (count at:(site)))) { (if (>= 4 (size Stack Cell at:(handSite P1))) (result P2 Win) ) (if (>= 4 (size Stack Cell at:(handSite P2))) (result P1 Win) ) } ) ) (nextPhase (all Sites (sites Board) if:(= 0 (count at:(site)))) ""BetweenRounds"" ) ) (phase ""BetweenRounds"" (play (if (<= 5 (size Stack Cell at:(handSite Mover))) (move Select (from Cell (handSite Mover)) (to (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover) if:(and (not (is In (to) (sites ""EndHoles""))) (is Empty (to)) ) ) ) (then (and { (forEach Value min:1 max:5 (fromTo (from Cell (last From) level:(- (size Stack Cell at:(last From) ) (value) ) ) (to (last To)) stack:True ) ) (if (is Mover P1) (remember Value ""OwnedP1"" (last To) ) (remember Value ""OwnedP2"" (last To) ) ) (if (<= (* 2 5) (count Cell at:(handSite Mover) ) ) (moveAgain) (if (or (= 8 (count Cell at:(handSite Mover ) ) ) (= 9 (count Cell at:(handSite Mover ) ) ) ) (and { (forEach Value min:1 max:(- (count Cell at:(handSite Mover ) ) 5 ) (fromTo (from Cell (handSite Mover ) level:(- (- (size Stack Cell at:(handSite Mover ) ) 5 ) (value ) ) ) (to (trackSite FirstSite ""TrackCCW"" from:(trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) if:(and { (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) (!= (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) (to ) ) } ) ) ) stack:True ) ) (forEach Value min:1 max:(- 5 (- (count Cell at:(handSite Mover ) ) 5 ) ) (fromTo (from Cell (handSite Next ) level:(- (size Stack Cell at:(handSite Next ) ) (value ) ) ) (to (trackSite FirstSite ""TrackCCW"" from:(trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) if:(and { (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) (!= (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) (to ) ) } ) ) ) stack:True ) ) (if (is Mover P1) (remember Value ""OwnedP1"" (trackSite FirstSite ""TrackCCW"" from:(trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) if:(and { (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) (!= (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) (to ) ) } ) ) ) (remember Value ""OwnedP2"" (trackSite FirstSite ""TrackCCW"" from:(trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) if:(and { (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) (!= (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) (to ) ) } ) ) ) ) (if (is Mover P2) (remember Value ""OwnedP1"" (trackSite FirstSite ""TrackCCW"" from:(trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) if:(and { (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) (!= (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) (to ) ) } ) ) ) (remember Value ""OwnedP2"" (trackSite FirstSite ""TrackCCW"" from:(trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) if:(and { (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) (!= (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) (to ) ) } ) ) ) ) } ) ) ) } ) ) ) (then (if (and (is Empty Cell (handSite P1)) (is Empty Cell (handSite P2)) ) (and (if (= (size Stack Cell at:(handSite P1 1) ) 2 ) (and (fromTo (from Cell (handSite P1 1) level:1 ) (to (mapEntry P1)) stack:True ) (fromTo (from Cell (handSite P1 1) level:0 ) (to (mapEntry P2)) stack:True ) ) (if (= (size Stack Cell at:(handSite P2 1) ) 2 ) (and (fromTo (from Cell (handSite P2 1) level:1 ) (to (mapEntry P1)) stack:True ) (fromTo (from Cell (handSite P2 1) level:0 ) (to (mapEntry P2)) stack:True ) ) (and (fromTo (from Cell (handSite P1 1) level:0 ) (to (mapEntry P1)) stack:True ) (fromTo (from Cell (handSite P2 1) level:0 ) (to (mapEntry P2)) stack:True ) ) ) ) (if (< 50 (value Random (range 1 100))) (set NextPlayer (player 1)) (set NextPlayer (player 2)) ) ) ) ) ) ) (nextPhase (and (is Empty Cell (handSite P1)) (is Empty Cell (handSite P2)) ) ""Sowing"" ) ) } ) )"
29478,CeelkoqyuqkoqijiEqual_Cost_Observed,"(game ""Ceelkoqyuqkoqiji"" (players 2) (equipment { (mancalaBoard 2 5 largeStack:True { (track ""TrackCCW"" ""0,1,E,11,10,W"" loop:True) (track ""TrackCW"" ""0,6,E,11,5,W"" loop:True) } ) (piece ""Seed"" Shared) (piece ""Ball"" P1) (piece ""Ball"" P2) (hand Each size:2) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (map { (pair P1 LastSite) (pair P2 FirstSite) }) (regions ""EndHoles"" (sites {0 (+ 1 (* 2 5)) })) } ) (rules (start { (place Stack ""Seed"" (union (sites Bottom) (sites Top)) count:5 ) (place Stack ""Ball1"" (mapEntry P1)) (place Stack ""Ball2"" (mapEntry P2)) (set RememberValue ""OwnedP1"" (sites Bottom)) (set RememberValue ""OwnedP2"" (sites Top)) } ) phases:{ (phase ""Sowing"" (play (or { (if (!= (var ""Direction"") 2) (move Select (from (if (is Prev Mover) (sites { (var ""Replay"") }) (if (is Mover P1) (sites (values Remembered ""OwnedP1"" ) ) (sites (values Remembered ""OwnedP2"" ) ) ) ) if:(!= 0 (size Stack at:(from))) ) (then (and { (forEach Value min:1 max:(size Stack at:(last From) ) (fromTo (from (last From) level:(- (size Stack at:(last From ) ) (value) ) ) (to (trackSite Move from:(last From ) ""TrackCCW"" steps:(value) ) ) stack:True ) ) (if (or (is In (trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 1 (size Stack at:(last From ) ) ) ) (sites ""EndHoles"") ) (>= (size Stack at:(last From) ) (* 2 5) ) ) (set Var ""Direction"" 0) (if (!= 0 (size Stack at:(trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 1 (size Stack at:(last From ) ) ) ) ) ) (and { (set Var ""Direction"" 1 ) (moveAgain) (set Var ""Replay"" (trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 1 (size Stack at:(last From ) ) ) ) ) } ) (and (set Var ""Direction"" 0 ) (if (is Occupied (trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) ) (forEach Level (trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) FromTop (if (= (id ""Seed"" Shared ) (what at:(trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) level:(level ) ) ) (fromTo (from (trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) level:(level ) ) (to (handSite Mover ) ) ) (fromTo (from (trackSite Move from:(last From ) ""TrackCCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) level:(level ) ) (to (handSite Mover 1 ) ) ) ) ) ) ) ) ) } ) ) ) ) (if (!= (var ""Direction"") 1) (move Select (from (if (is Prev Mover) (sites { (var ""Replay"") }) (if (is Mover P1) (sites (values Remembered ""OwnedP1"" ) ) (sites (values Remembered ""OwnedP2"" ) ) ) ) if:(!= 0 (size Stack at:(from))) ) (then (and (forEach Value min:1 max:(size Stack at:(last From) ) (fromTo (from (last From) level:(- (size Stack at:(last From) ) (value) ) ) (to (trackSite Move from:(last From) ""TrackCW"" steps:(value) ) ) stack:True ) ) (if (or (is In (trackSite Move from:(last From) ""TrackCW"" steps:(+ 1 (size Stack at:(last From ) ) ) ) (sites ""EndHoles"") ) (>= (size Stack at:(last From) ) (* 5 2) ) ) (set Var ""Direction"" 0) (if (!= 0 (size Stack at:(trackSite Move from:(last From ) ""TrackCW"" steps:(+ 1 (size Stack at:(last From ) ) ) ) ) ) (and { (set Var ""Direction"" 2 ) (moveAgain) (set Var ""Replay"" (trackSite Move from:(last From ) ""TrackCW"" steps:(+ 1 (size Stack at:(last From ) ) ) ) ) } ) (and (set Var ""Direction"" 0 ) (if (is Occupied (trackSite Move from:(last From ) ""TrackCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) ) (forEach Level (trackSite Move from:(last From ) ""TrackCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) FromTop (if (= (id ""Seed"" Shared ) (what at:(trackSite Move from:(last From ) ""TrackCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) level:(level ) ) ) (fromTo (from (trackSite Move from:(last From ) ""TrackCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) level:(level ) ) (to (handSite Mover ) ) ) (fromTo (from (trackSite Move from:(last From ) ""TrackCW"" steps:(+ 2 (size Stack at:(last From ) ) ) ) level:(level ) ) (to (handSite Mover 1 ) ) ) ) ) ) ) ) ) ) ) ) ) } (then (if (= 2 (count Cell in:(sites { (handSite P1 1) (handSite P2 1) } ) ) ) (and { (forEach Site (intersection (sites (values Remembered ""OwnedP1"" ) ) (sites (values Remembered ""OwnedP2"" ) ) ) (if (is Occupied (site)) (and (forEach Level (site) FromTop (if (>= (level) (/ (size Stack at:(site ) ) 2 ) ) (fromTo (from (site) level:(level ) ) (to (handSite P1 ) ) stack:True ) ) ) (forEach Level (site) FromTop (if (< (level) (/ (size Stack at:(site ) ) 2 ) ) (fromTo (from (site) level:(level ) ) (to (handSite P2 ) ) stack:True ) ) ) ) ) ) (forEach Site (union (difference (sites (values Remembered ""OwnedP1"" ) ) (sites (values Remembered ""OwnedP2"" ) ) ) (sites { (mapEntry P1) }) ) (if (is Occupied (site)) (forEach Level (site) FromTop (fromTo (from (site) level:(level) ) (to (handSite P1)) stack:True ) ) ) ) (forEach Site (union (difference (sites (values Remembered ""OwnedP2"" ) ) (sites (values Remembered ""OwnedP1"" ) ) ) (sites { (mapEntry P2) }) ) (if (is Occupied (site)) (forEach Level (site) FromTop (fromTo (from (site) level:(level) ) (to (handSite P2)) stack:True ) ) ) ) (forget Value ""OwnedP1"" All) (forget Value ""OwnedP2"" All) } ) (and (if (and (if (= 1 P1) (no Pieces All in:(sites (values Remembered ""OwnedP1"" ) ) ) (no Pieces All in:(sites (values Remembered ""OwnedP2"" ) ) ) ) (>= (size Stack Cell at:(handSite P1) ) (if (= 1 P1) (count Sites in:(sites (values Remembered ""OwnedP1"" ) ) ) (count Sites in:(sites (values Remembered ""OwnedP2"" ) ) ) ) ) ) (forEach Value min:1 max:(if (= 1 P1) (count Sites in:(sites (values Remembered ""OwnedP1"" ) ) ) (count Sites in:(sites (values Remembered ""OwnedP2"" ) ) ) ) (fromTo (from Cell (handSite P1) level:(- (size Stack Cell at:(handSite P1) ) (value) ) ) (to (regionSite (sites (values Remembered ""OwnedP1"" ) ) index:(- (value) 1) ) ) stack:True ) ) ) (if (and (if (= 1 P2) (no Pieces All in:(sites (values Remembered ""OwnedP1"" ) ) ) (no Pieces All in:(sites (values Remembered ""OwnedP2"" ) ) ) ) (>= (size Stack Cell at:(handSite P2) ) (if (= 1 P2) (count Sites in:(sites (values Remembered ""OwnedP1"" ) ) ) (count Sites in:(sites (values Remembered ""OwnedP2"" ) ) ) ) ) ) (forEach Value min:1 max:(if (= 1 P2) (count Sites in:(sites (values Remembered ""OwnedP1"" ) ) ) (count Sites in:(sites (values Remembered ""OwnedP2"" ) ) ) ) (fromTo (from Cell (handSite P2) level:(- (size Stack Cell at:(handSite P2) ) (value) ) ) (to (regionSite (sites (values Remembered ""OwnedP2"" ) ) index:(- (value) 1) ) ) stack:True ) ) ) ) ) ) ) ) (end (if (all Sites (sites Board) if:(= 0 (count at:(site)))) { (if (>= 4 (size Stack Cell at:(handSite P1))) (result P2 Win) ) (if (>= 4 (size Stack Cell at:(handSite P2))) (result P1 Win) ) } ) ) (nextPhase (all Sites (sites Board) if:(= 0 (count at:(site)))) ""BetweenRounds"" ) ) (phase ""BetweenRounds"" (play (if (<= 5 (size Stack Cell at:(handSite Mover))) (move Select (from Cell (handSite Mover)) (to (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover) if:(and (not (is In (to) (sites ""EndHoles""))) (is Empty (to)) ) ) ) (then (and { (forEach Value min:1 max:5 (fromTo (from Cell (last From) level:(- (size Stack Cell at:(last From) ) (value) ) ) (to (last To)) stack:True ) ) (if (is Mover P1) (remember Value ""OwnedP1"" (last To) ) (remember Value ""OwnedP2"" (last To) ) ) (if (<= (* 2 5) (count Cell at:(handSite Mover) ) ) (moveAgain) (if (or (= 8 (count Cell at:(handSite Mover ) ) ) (= 9 (count Cell at:(handSite Mover ) ) ) ) (and { (forEach Value min:1 max:(- (count Cell at:(handSite Mover ) ) 5 ) (fromTo (from Cell (handSite Mover ) level:(- (- (size Stack Cell at:(handSite Mover ) ) 5 ) (value ) ) ) (to (trackSite FirstSite ""TrackCCW"" from:(trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) if:(and { (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) (!= (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) (to ) ) } ) ) ) stack:True ) ) (forEach Value min:1 max:(- 5 (- (count Cell at:(handSite Mover ) ) 5 ) ) (fromTo (from Cell (handSite Next ) level:(- (size Stack Cell at:(handSite Next ) ) (value ) ) ) (to (trackSite FirstSite ""TrackCCW"" from:(trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) if:(and { (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) (!= (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) (to ) ) } ) ) ) stack:True ) ) (if (is Mover P1) (remember Value ""OwnedP1"" (trackSite FirstSite ""TrackCCW"" from:(trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) if:(and { (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) (!= (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) (to ) ) } ) ) ) (remember Value ""OwnedP2"" (trackSite FirstSite ""TrackCCW"" from:(trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) if:(and { (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) (!= (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) (to ) ) } ) ) ) ) (if (is Mover P2) (remember Value ""OwnedP1"" (trackSite FirstSite ""TrackCCW"" from:(trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) if:(and { (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) (!= (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) (to ) ) } ) ) ) (remember Value ""OwnedP2"" (trackSite FirstSite ""TrackCCW"" from:(trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) if:(and { (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) (!= (trackSite FirstSite ""TrackCCW"" from:(mapEntry Mover ) if:(and (not (is In (to ) (sites ""EndHoles"" ) ) ) (is Empty (to ) ) ) ) (to ) ) } ) ) ) ) } ) ) ) } ) ) ) (then (if (and (is Empty Cell (handSite P1)) (is Empty Cell (handSite P2)) ) (and (if (= (size Stack Cell at:(handSite P1 1) ) 2 ) (and (fromTo (from Cell (handSite P1 1) level:1 ) (to (mapEntry P1)) stack:True ) (fromTo (from Cell (handSite P1 1) level:0 ) (to (mapEntry P2)) stack:True ) ) (if (= (size Stack Cell at:(handSite P2 1) ) 2 ) (and (fromTo (from Cell (handSite P2 1) level:1 ) (to (mapEntry P1)) stack:True ) (fromTo (from Cell (handSite P2 1) level:0 ) (to (mapEntry P2)) stack:True ) ) (and (fromTo (from Cell (handSite P1 1) level:0 ) (to (mapEntry P1)) stack:True ) (fromTo (from Cell (handSite P2 1) level:0 ) (to (mapEntry P2)) stack:True ) ) ) ) (if (< 50 (value Random (range 1 100))) (set NextPlayer (player 1)) (set NextPlayer (player 2)) ) ) ) ) ) ) (nextPhase (and (is Empty Cell (handSite P1)) (is Empty Cell (handSite P2)) ) ""Sowing"" ) ) } ) )"
114586,Ludus_CoriovalliHaretavl_Switch_Starting_Position_-_No_Extension_Joined_Diagonal_Suggested,"(game ""Ludus Coriovalli"" (players 2) (equipment { (board (add (merge { (scale 2 1 (rectangle 1 3)) (rectangle 2 1) (shift 4 0 (rectangle 2 1)) (shift 4 1.5 (rectangle 2 1)) (shift 0 1.5 (rectangle 2 1)) (scale 2 1 (shift 0 2.5 (rectangle 1 3))) } ) edges:{ {3 7} {5 4} {9 1} {3 1} {1 4} {5 9} {9 7} } ) use:Vertex ) (piece ""Dog"" P2 (move Step (to if:(is Empty (to))))) (piece ""Hare"" P1 (move Step (to if:(is Empty (to))))) } ) (rules (start { (place ""Hare1"" (sites {""B1""})) (place ""Dog2"" (sites {""A4"" ""B4"" ""C4""})) } ) (play (forEach Piece)) (end { (if (no Moves P1) (result P2 Win)) (if (or (>= (count Moves) (- (value MoveLimit) 10)) (>= (count Turns) (- (value TurnLimit) 5)) ) (result P1 Win) ) } ) ) )"
114776,Ludus_CoriovalliHaretavl_Switch_Starting_Position_-_No_Extension_No_Joined_Diagonal_Suggested,"(game ""Ludus Coriovalli"" (players 2) (equipment { (board (add (merge { (rectangle 1 2) (shift 1 0 (rectangle 1 3)) (shift 3 0 (rectangle 1 2)) (rectangle 2 1) (shift 4 0 (rectangle 2 1)) (shift 4 1.5 (rectangle 2 1)) (shift 0 1.5 (rectangle 2 1)) (shift 0 2.5 (rectangle 1 2)) (shift 1 2.5 (rectangle 1 3)) (shift 3 2.5 (rectangle 1 2)) } ) edges:{ {9 5} {5 1} {9 11} {12 2} {13 7} {6 3} {6 7} } ) use:Vertex ) (piece ""Dog"" P2 (move Step (to if:(is Empty (to))))) (piece ""Hare"" P1 (move Step (to if:(is Empty (to))))) } ) (rules (start { (place ""Hare1"" (sites {""C1""})) (place ""Dog2"" (sites {""A4"" ""C4"" ""E4""})) } ) (play (forEach Piece)) (end { (if (no Moves P1) (result P2 Win)) (if (or (>= (count Moves) (- (value MoveLimit) 10)) (>= (count Turns) (- (value TurnLimit) 5)) ) (result P1 Win) ) } ) ) )"
117792,Ludus_CoriovalliHaretavl_Switch_Two_Dogs_Starting_Position_-_No_Extension_Joined_Diagonal_Suggested,"(game ""Ludus Coriovalli"" (players 2) (equipment { (board (add (merge { (scale 2 1 (rectangle 1 3)) (rectangle 2 1) (shift 4 0 (rectangle 2 1)) (shift 4 1.5 (rectangle 2 1)) (shift 0 1.5 (rectangle 2 1)) (scale 2 1 (shift 0 2.5 (rectangle 1 3))) } ) edges:{ {3 7} {5 4} {9 1} {3 1} {1 4} {5 9} {9 7} } ) use:Vertex ) (piece ""Dog"" P2 (move Step (to if:(is Empty (to))))) (piece ""Hare"" P1 (move Step (to if:(is Empty (to))))) } ) (rules (start { (place ""Hare1"" (sites {""B1""})) (place ""Dog2"" (sites {""A4"" ""B4"" ""C4""})) } ) (play (forEach Piece)) (end { (if (no Moves P1) (result P2 Win)) (if (or (>= (count Moves) (- (value MoveLimit) 10)) (>= (count Turns) (- (value TurnLimit) 5)) ) (result P1 Win) ) } ) ) )"
117952,Ludus_CoriovalliHaretavl_Switch_Two_Dogs_Starting_Position_1_-_No_Extension_No_Joined_Diagonal_Suggested,"(game ""Ludus Coriovalli"" (players 2) (equipment { (board (add (merge { (rectangle 1 2) (shift 1 0 (rectangle 1 3)) (shift 3 0 (rectangle 1 2)) (rectangle 2 1) (shift 4 0 (rectangle 2 1)) (shift 4 1.5 (rectangle 2 1)) (shift 0 1.5 (rectangle 2 1)) (shift 0 2.5 (rectangle 1 2)) (shift 1 2.5 (rectangle 1 3)) (shift 3 2.5 (rectangle 1 2)) } ) edges:{ {9 5} {5 1} {9 11} {12 2} {13 7} {6 3} {6 7} } ) use:Vertex ) (piece ""Dog"" P2 (move Step (to if:(is Empty (to))))) (piece ""Hare"" P1 (move Step (to if:(is Empty (to))))) } ) (rules (start { (place ""Hare1"" (sites {""C1""})) (place ""Dog2"" (sites {""A4"" ""C4"" ""E4""})) } ) (play (forEach Piece)) (end { (if (no Moves P1) (result P2 Win)) (if (or (>= (count Moves) (- (value MoveLimit) 10)) (>= (count Turns) (- (value TurnLimit) 5)) ) (result P1 Win) ) } ) ) )"
192964,ShonoChildren_Observed,"(game ""Shono"" (players 2) (equipment { (mancalaBoard 2 6 (track ""Track"" ""1,E,N,W"" loop:True)) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (map { (pair P1 FirstSite) (pair P2 LastSite) }) (piece ""Seed"" Shared) } ) (rules (start (set Count 5 to:(sites Track))) (play (move Select (from (sites Mover) if:(< 0 (count at:(from)))) (then (sow if:(and (is In (to) (sites Next)) (or (= (count at:(to)) 2) (= (count at:(to)) 3)) ) apply:(fromTo (from (to)) (to (mapEntry (mover))) count:(count at:(to)) ) includeSelf:False backtracking:True ) ) ) ) (end (if (no Moves Mover) (byScore { (score P1 (+ (count at:(mapEntry P1)) (count in:(sites P1))) ) (score P2 (+ (count at:(mapEntry P2)) (count in:(sites P2))) ) } ) ) ) ) )"
193144,ShonoShono_Observed,"(game ""Shono"" (players 2) (equipment { (mancalaBoard 2 6 (track ""Track"" ""1,E,N,W"" loop:True)) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (map { (pair P1 FirstSite) (pair P2 LastSite) }) (piece ""Seed"" Shared) } ) (rules (start (set Count 5 to:(sites Track))) (play (move Select (from (sites Mover) if:(< 0 (count at:(from)))) (then (sow if:(and (is In (to) (sites Next)) (or (= (count at:(to)) 2) (= (count at:(to)) 3)) ) apply:(fromTo (from (to)) (to (mapEntry (mover))) count:(count at:(to)) ) includeSelf:False backtracking:True ) ) ) ) (end (if (no Moves Mover) (byScore { (score P1 (+ (count at:(mapEntry P1)) (count in:(sites P1))) ) (score P2 (+ (count at:(mapEntry P2)) (count in:(sites P2))) ) } ) ) ) ) )"
